<h2 class="melody-d-title">表单提交和表单校验</h2>
<p>这一部分使用注册、登录、验证码作为例子来讲解表单提交、表单校验。</p><br/>
<details open>
    <summary>
        <h3>表单提交</h3>
    </summary>
    <div style="margin-left: 5%;">
        <p>向服务器传递参数的方式前面已经介绍过了，而在表单提交方面，有以下几点需要注意：</p>
        <li>页面上最好使用&#35;springBind的方式进行绑定，这样便于使用BindingResult进行校验和错误回显。使用方法如下例所示：</li>
        <div class="melody-code-wrap"> <pre><code>
&lt;tr&gt;
    &lt;th&gt;年龄：&lt;/th&gt;
    &lt;td&gt;
        &#36;springBind("user.age")
        &lt;input type="text" id="birthday" name="&#36;{status.expression}" value="&#36;!{status.value}" /&gt;
        &lt;label class="error"&gt;&#36;{status.errorMessage}&lt;/label&gt;
    &lt;/td&gt;
&lt;/tr&gt;</code>
        </pre></div>

        <p>其中，<br/>&#36;springBind("user.age")是绑定语句，可以将下一个input标签的值绑定到user.age上。</p>
        <p>&#36;{status.expression}可以自动填入所绑定变量的变量会名，如这里会填入'age'。</p>
        <p>&#36;!{status.value}这个表达式在页面有传入vo对象时，会自动将变量的值填入这里。</p>
        <p>&#36;{status.errorMessage}服务器上校验返回的BingingResult中的错误信息会在这里显示。</p><br/>
        <li>另外，常用或者内容较多的表单要创建一个VO对象进行传参，这样便于维护。</li>
        <br/>
    </div>
</details>

<details open>
    <summary>
        <h3>表单校验</h3>
    </summary>
    <div style="margin-left: 5%;">
        <p>表单校验使用的是Validator接口，通过实现Validator接口并使用其validate方法，可以对数据进行校验。<br/>
            以com.eyeieye.melody.demo.web.action.login.UserRegisterAction类中的register方法为例，表单验证的使用方法如下：</p>
        <li>1、获得校验器，即Validator接口实现类的对象，如本例中的registerValidator。</li>
        <li>2、方法入参中加入BindingResult result这个参数。</li>
        <li>3、使用校验器进行校验，其入参为VO对象和BindingResult，如本例中的：registerValidator.validate(user, result)，校验器会将错误信息写入BindingResult。</li>
        <li>4、根据校验的结果进行其他操作。</li>
        <br/>
    </div>
</details>

<details open>
    <summary>
        <h3>示例</h3>
    </summary>
    <div style="margin-left: 5%;">
        <p><a class="m-detail-link" href="$appServer.get('/login/register.htm')">用户注册</a></p>
        <p><a class="m-detail-link" href="$appServer.get('/login/login.htm')">用户登录</a></p>

    </div>
</details>