<ul class="demo-ul-paragraph">
    <li>1、设置session.meta.cookie.domain</li>
    <p>因为NoSession技术使用的是cookie存储session，所以需要先配置一下所用到的cookie的作用域。<br/>
        如果没有进行配置，则默认为配置文件中的app.server.host<br/>
        例如，我需要在sinochem.com下的网站中使用nosession，那么就需要配置：</p>
    <pre><code class="m-xmp">session.meta.cookie.domain=.sinochem.com</code></pre>
    <li>2、编写domain类</li>
    <p>cookie中存储信息使用了java序列化，所以需要编写一个用于存放信息的实体类。<br/>
        该类需要实现Serializable接口，保证实体类可以序列化。<br/>
        示例参见com.eyeieye.melody.demo.web.action.login.User类。</p>
    <li>3、配置xml文件</li>
    <p>在springbean的配置文件中添加bean：com.eyeieye.melos.web.nosession.SessionCookieStoreConfig</p>
    <p>该bean中需要注入如下参数：</p>
    <li>attributeNames</li>
    <p>AttributeName是程序存取cookie的key，该参数是一个Set对象， 可以注入多个attributeName。</p>
    <li>encode</li>
    <p>这是session的加密方法，需要传入com.eyeieye.melos.web.nosession.Encode接口的子类，该参数为空时会使用默认的加密方法。</p>
    <li>canUpdate</li>
    <p>是否可以更新cookie，默认为true</p>
    <li>domain</li>
    <p>cookie的作用域，不能为空</p>
    <li>httpOnly</li>
    <p>是否为httpOnly，默认为true</p>
    <p>maxAge</p>
    <li>设置cookie的存在时间</li>
    <li>path</li>
    <p>cookie存在于domain下的子路径，不能为空，一般配置为"\"</p>
    <li>secure</li>
    <p>cookie的Secure属性，默认为false</p>
    <li>cookieName</li>
    <p>cookie在浏览器上存储的名字</p>
    <li>maxLength</li>
    <p>cookie中单个对象的最大长度</p>
    <li>maxCount</li>
    <p>cookie存储的最大对象数</p>
    <br/>
    <h3>配置示例：</h3>
    <div class="melody-code-wrap"><pre><code>&lt;bean class=&quot;com.eyeieye.melos.web.nosession.SessionCookieStoreConfig&quot;&gt;
		&lt;property name=&quot;cookieName&quot; value=&quot;_d_&quot;/&gt;
		&lt;property name=&quot;attributeNames&quot;httpOnly&gt;
			&lt;set&gt;
				&lt;value&gt;_administerAgent&lt;/value&gt;
				&lt;value&gt;user&lt;/value&gt;
				&lt;value&gt;userAgent&lt;/value&gt;
			&lt;/set&gt;
		&lt;/property&gt;
		&lt;property name=&quot;domain&quot; value=&quot;${session.meta.cookie.domain}&quot;/&gt;
		&lt;property name=&quot;path&quot; value=&quot;/&quot;/&gt;
	&lt;/bean&gt;</code></pre></div>
    <li>4、使用HttpSession</li>
    <p>首先，在action的方法中加入HttpSession session这样的参数，方法便可以自动取得HttpSession对象。<br/>
        然后使用setAttribute(String name, Object obj)方法便可以将实体类写入HttpSession，其中name为实体类对应的NAME，obj为实体类对象。<br/>
        待页面返回时，会将cookie写到用户的浏览器中。</p>
</ul>